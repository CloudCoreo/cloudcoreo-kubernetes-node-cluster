## This file was auto-generated by CloudCoreo CLI
## This file was automatically generated using the CloudCoreo CLI
##
## This config.rb file exists to create and maintain services not related to compute.
## for example, a VPC might be maintained using:
##
## coreo_aws_vpc_vpc "my-vpc" do
##   action :sustain
##   cidr "12.0.0.0/16"
##   internet_gateway true
## end
##

coreo_aws_iam_policy "${KUBE_NODE_NAME}" do
  action :sustain
  policy_name "${KUBE_NODE_NAME}ServerIAMPolicy"
  policy_document <<-EOH
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeInstanceAttribute",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInstances",
                "ec2:DescribeTags",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
                "ec2:ModifyInstanceAttribute",
                "ec2:CreateRoute",
                "ec2:ReplaceRoute"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeVpcs",
        "ec2:DescribeRouteTables"
      ],
      "Resource": "*"
    }
  ]
}
EOH
end

coreo_aws_ec2_instance "${KUBE_NODE_NAME}" do
  action :define
  image_id "${KUBE_CLUSTER_AMI}"
  size "${KUBE_NODE_SIZE}"
  security_groups ["${KUBE_NODE_NAME}"]
  role "${KUBE_NODE_NAME}"
  ssh_key "${KUBE_NODE_KEY}"
  disks [
         {
           :device_name => "/dev/xvda",
           :volume_size => 500,
           :volume_type => 'io1',
           :iops => 3500
         }
        ]
end
